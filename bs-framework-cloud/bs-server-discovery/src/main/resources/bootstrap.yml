spring:
  application:
    name: bs-server-discovery
  profiles.active: dev

server:
  port: 9001

---
spring:
  profiles: dev
eureka:
  instance:
    hostname: localhost
    port: ${server.port}
  client:
    registerWithEureka: false
    fetchRegistry: false
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/
  server:
    waitTimeInMsWhenSyncEmpty: 0

---

spring:
  profiles: docker
server:
  port: ${SERVICE_PORT}
eureka:
  instance:
    hostname: ${SERVICE_HOST}
    port: ${server.port}
  client:
    registerWithEureka: false
    fetchRegistry: false
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/
  server:
    waitTimeInMsWhenSyncEmpty: 0
    enable-self-preservation: false

---

spring:
  profiles: primary
server:
  port: 9001
eureka:
  instance:
    hostname: eureka-primary
    port: ${server.port}
  client:
    serviceUrl:
      defaultZone: http://eureka-secondary:9002/eureka/,http://eureka-tertiary:9003/eureka/

---

spring:
  profiles: secondary
server:
  port: 9002
eureka:
  instance:
    hostname: eureka-secondary
    port: ${server.port}
  client:
    serviceUrl:
      defaultZone: http://eureka-primary:9001/eureka/,http://eureka-tertiary:9003/eureka/

---

spring:
  profiles: tertiary
server:
  port: 9003
eureka:
  instance:
    hostname: eureka-tertiary
    port: ${server.port}
  client:
    serviceUrl:
      defaultZone: http://eureka-secondary:9002/eureka/,http://eureka-primary:9001/eureka/